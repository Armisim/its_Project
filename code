!/usr/bin/python
# coding=utf-8
# Copyright (c)
# Author: Simone Bollati

# Importazione della libreria Adafruit per controllare il sensore, Rpi.GPIO per cotrollare i pin e time
import Adafruit_DHT
import RPi.GPIO as GPIO
import time
import datetime
import sqlite3 as sqlite
import bottle

# Connessione al database log.db
connessione=sqlite.connect("log.db")

# Setting di una variabile il tipo di sensore utilizzato
sensor = Adafruit_DHT.DHT11

# Setting del pin a cui è collegato il sensore
pin = 25

# Setting di alcuni parametri inerenti al funzionamento del LED
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(17,GPIO.OUT)

# Setting temperatura massima limite
max = 27

# Setting varibile di appoggio
temp = 0

# Ciclo infinito in cui si recupera il valore della temperatura e si accende eventualmente il LED
while True:

    # Prelevo la temperatura e l'umidità dal sensore
    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)
    # Salvo in una variabile il solo valore della temperatura
    temp = float(temperature)
    # Stampo il valore della temperatura
    print(temp)
    # Comando SQL di servizio
    cursore=connessione.cursor()
    # Template della query SQL di inserimento dati nella tabella Valori
    comandosql= "INSERT INTO VALORI VALUES(?,?)"
    # Waiting di 1 secondo
    time.sleep(1)

    # Se la temperatura è maggiore del valore limite il LED si accende
    if (temp >= float(max)):
        # Istruzione per spegnere il led 17
        GPIO.output(17, GPIO.HIGH)
        # Stampo la stringa di segnalazione
        print("Temperatura oltre la soglia")
        # Esecuzione della query passando al template i parametri data e temperatura
        cursore.execute(comandosql,(datetime.datetime.utcnow(), temp))
        #Richiesta di salvataggio dei dati in modo permanente
        connessione.commit()
        # Viene stampata la stringa di conferma del salvataggio
        print("Dati salvati - temperatura: "+str(temperatura))
        # Waiting di 1 secondo
        time.sleep(1)

    # Se la temperatura è minore del valore limite il LED si spegne
    if (temp < float(max)):
        # Istruzione per spegnere il led 17
        GPIO.output(17, GPIO.LOW)
        # Stampo la stringa di segnalazione
        print("Temperatura entro la soglia")
        # Waiting di 1 secondo
        time.sleep(1)
